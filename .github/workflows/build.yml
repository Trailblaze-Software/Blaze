---
name: CI
on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:
env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - name: Install pre-commit
        run: |
          pip install pre-commit
      - name: Run pre-commit
        run: |
          pre-commit run -a
  ubuntu-latest-build:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          ./install-deps.sh
      - name: Build CLI code
        run: |
          ./linux-build.sh -DBLAZE_CLI_ONLY=True
      - name: Build GUI code
        run: |
          rm -rf linux-build && ./linux-build.sh
      - name: CPack
        run: |
          cd linux-build && cpack -C Release
      - name: Unit tests
        run: |
          cmake --build linux-build --target test
      - name: Run default config
        run: |
          ./blaze-cli assets/default_config.json
  ubuntu-latest-pdal-build:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          ./install-deps.sh
      - name: Install pdal
        run: |
          sudo apt install -y libpdal-dev
      - name: Build CLI code
        run: |
          ./linux-build.sh -DBLAZE_CLI_ONLY=True -DBLAZE_USE_PDAL=True
      - name: Build GUI code
        run: |
          rm -rf linux-build && ./linux-build.sh
      - name: CPack
        run: |
          cd linux-build && cpack -C Release
      - name: Unit tests
        run: |
          cmake --build linux-build --target test
      - name: Run default config
        run: |
          ./blaze-cli assets/default_config.json

# windows-latest-build:
#     runs-on: windows-latest
#     timeout-minutes: 400
#     steps:
#         - uses: actions/checkout@v4

#         - name: Export GitHub Actions cache environment variables
#           uses: actions/github-script@v7
#           with:
#             script: |
#               core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
#               core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

#         - name: Setup CMake
#           uses: threeal/cmake-action@v2.0.0
#           with:
#             options: VCPKG_BUILD_TYPE=release

#         - name: Build code
#           run: cmake --build build

#         - name: CPack
#           run: |
#             cd build && cpack -C Release
